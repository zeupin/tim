


// ------------------------------------------------------------
// layout-make-grid，生成对应的grid宽度值
// ------------------------------------------------------------
//
// @param $screen 一般为default，md, lg, xl
// @param $columns-list 默认为 $layout-columns-list，要生成的列数列表
//
// 生成：
//
// 如果 $screen == default
// grid-2-1 {width:} grid-2-2 {}
// grid-3-1 {width:} grid-3-2 {} grid-3-3 {}
// grid-4-1 {width:} grid-4-2 {} grid-4-3 {} grid-4-4 {}
//
// 如果 $screen == md
// grid-2-1--md {width:} grid-2-2--md {}
// grid-3-1--md {width:} grid-3-2--md {} grid-3-3--md {}
// grid-4-1--md {width:} grid-4-2--md {} grid-4-3--md {} grid-4-4--md {}
//
// 注意：类似 grid-4-4 这种100%的宽度，可以省略不写，也可以仅仅设置为 grid。
// 因为已经设置了.col的默认宽度为100%。

@mixin layout-make-grid(
  $screen,
  $columns-list: $layout-columns-list,
  $gutter-list: $layout-gutter-list
){
  $screen-type: "--#{$screen}";
  @if $screen == default {
    $screen-type: "";
  }
  $selector: ".grid#{$screen-type}";
  #{$selector} {
    width: 100%;
  }
  @each $columns in $columns-list {
    @for $i from 1 through $columns {
      $selector: ".grid-#{$columns}-#{$i}#{$screen-type}";
      #{$selector} {
        @each $gutter-name, $gutter-width in $gutter-list {
          @if $gutter-name == default {
            width: percentage($i / $columns) - $gutter-width;
          } @else {
            .#{$gutter-name} & {
              width: percentage($i / $columns) - $gutter-width;
            }
          }
        }
      }
    }
  }
}


